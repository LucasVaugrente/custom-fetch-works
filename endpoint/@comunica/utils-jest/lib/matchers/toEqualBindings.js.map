{"version":3,"file":"toEqualBindings.js","sourceRoot":"","sources":["toEqualBindings.ts"],"names":[],"mappings":";;AAAA,6EAAoE;AAGpE,SAAS,IAAI,CAAC,QAAsB,EAAE,MAAoB;IACxD,OAAO;QACL,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,IAAA,yCAAgB,EAAC,QAAQ,CAAC,QAAQ,IAAA,yCAAgB,EAAC,MAAM,CAAC,cAAc;QACnG,IAAI,EAAE,KAAK;KACZ,CAAC;AACJ,CAAC;AAED,SAAS,OAAO,CAAC,QAAsB,EAAE,MAAoB;IAC3D,OAAO;QACL,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,IAAA,yCAAgB,EAAC,QAAQ,CAAC,QAAQ,IAAA,yCAAgB,EAAC,MAAM,CAAC,kBAAkB;QACvG,IAAI,EAAE,IAAI;KACX,CAAC;AACJ,CAAC;AAED,kBAAe;IACb,eAAe,CAAC,QAAsB,EAAE,MAAoB;QAC1D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;CACF,CAAC","sourcesContent":["import { bindingsToString } from '@comunica/utils-bindings-factory';\nimport type * as RDF from '@rdfjs/types';\n\nfunction fail(received: RDF.Bindings, actual: RDF.Bindings): any {\n  return {\n    message: () => `expected ${bindingsToString(received)} and ${bindingsToString(actual)} to be equal`,\n    pass: false,\n  };\n}\n\nfunction succeed(received: RDF.Bindings, actual: RDF.Bindings): any {\n  return {\n    message: () => `expected ${bindingsToString(received)} and ${bindingsToString(actual)} not to be equal`,\n    pass: true,\n  };\n}\n\nexport default {\n  toEqualBindings(received: RDF.Bindings, actual: RDF.Bindings) {\n    if (!received.equals(actual)) {\n      return fail(received, actual);\n    }\n\n    return succeed(received, actual);\n  },\n};\n"]}